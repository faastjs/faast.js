# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

executors:
    node14:
        docker:
            - image: circleci/node:17
        working_directory: ~/repo

jobs:
    build_and_test:
        description: "build faast.js"
        parameters:
            nodeVersion:
                type: string
            executor:
                type: executor
            target:
                type: string
        executor: << parameters.executor >>
        steps:
            - checkout
            - restore_cache:
                  keys:
                      - <<parameters.nodeVersion>>-{{ checksum "package.json" }}
                      - <<parameters.nodeVersion>>
            - run: npm install
            - save_cache:
                  paths:
                      - node_modules
                  key: <<parameters.nodeVersion>>-{{ checksum "package.json" }}
            - run: npm run build
            - run: npm run set-gcp-key
            - run: npx nyc npm run <<parameters.target>>
            - run: if [ -s coverage/lcov.info ]; then echo "coverage found"; else echo "no coverage information!"; exit 1; fi
            - run:
                  command: npm run codecov
                  when: always
    examples:
        description: "test examples repository"
        parameters:
            nodeVersion:
                type: string
            executor:
                type: executor
        executor: << parameters.executor >>
        steps:
            - checkout
            - restore_cache:
                  keys:
                      - <<parameters.nodeVersion>>-{{ checksum "package.json" }}
                      - <<parameters.nodeVersion>>
            - run: npm install
            - save_cache:
                  paths:
                      - node_modules
                  key: <<parameters.nodeVersion>>-{{ checksum "package.json" }}
            - run: npm run build
            - run: npm pack
            - run: mkdir ~/tmp
            - run: cd ~/tmp && git clone https://github.com/faastjs/examples
            - run: cp faastjs-0.0.0-semantic-release.tgz ~/tmp/examples
            - run: cd ~/tmp/examples && node test-examples.js faastjs-0.0.0-semantic-release.tgz
    release:
        description: "semantic release"
        executor: node14
        steps:
            - checkout
            - restore_cache:
                  keys:
                      - node14-{{ checksum "package.json" }}
                      - node14
            - run: npm install --no-save
            - run: npm run build
            - run: npm run test-git-status
            - run: npm run test-release
            - run: npm run semantic-release
    cleanup:
        description: "cleanup cloud accounts"
        executor: node14
        steps:
            - checkout
            - run: npm install
            - run: npm run build
            - run: npm run set-gcp-key
            - run: npm run cleanup-cloud

workflows:
    version: 2
    faastjs:
        jobs:
            - build_and_test:
                  name: "aws-node14"
                  nodeVersion: "node14"
                  executor: node14
                  target: "test-aws"
            - build_and_test:
                  name: "google-node14"
                  nodeVersion: "node14"
                  executor: node14
                  target: "test-google-remote"
            - examples:
                  nodeVersion: "node14"
                  executor: node14
            - release:
                  requires:
                      - aws-node14
                      - google-node14
                      - examples
                  filters:
                      branches:
                          only: master
    nightly_cleanup:
        triggers:
            - schedule:
                  cron: "0 10 * * *"
                  filters:
                      branches:
                          only:
                              - master
        jobs:
            - cleanup
            - build_and_test:
                  name: "aws-node14"
                  nodeVersion: "node14"
                  executor: node14
                  target: "test-aws"
                  requires:
                      - cleanup
            - build_and_test:
                  name: "google-node14"
                  nodeVersion: "node14"
                  executor: node14
                  target: "test-google-remote"
                  requires:
                      - cleanup
            - examples:
                  nodeVersion: "node14"
                  executor: node14
                  requires:
                      - cleanup
